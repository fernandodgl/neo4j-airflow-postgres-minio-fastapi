version: '3.9'

services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres-data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    container_name: weave-minio
    command: server /data --console-address ":9001" 
    ports: 
      - '9000:9000'
      - '9001:9001'
    
    volumes:
      - data:/data
    environment:
      - "MINIO_ROOT_USER=admin"
      - "MINIO_ROOT_PASSWORD=password"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    
  mc-service:
    image: minio/mc
    depends_on:
      - minio
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set minio http://minio:9000 admin password;
      /usr/bin/mc mb minio/bucket;
      /usr/bin/mc cp -r /data minio/bucket/;
      /usr/bin/mc ls minio/bucket;
      echo 'MinIO bucket contents:';
      /usr/bin/mc ls minio/bucket;
      "
    volumes:
      - ./data:/data  
  
  spark-master:
    image: bitnami/spark:3.2.1
    environment:
      - SPARK_MODE=master
    ports:                # check
      - "7077:7077"       # check 
    volumes:
      - spark-data:/spark-data
    command: bin/spark-class org.apache.spark.deploy.master.Master  

  spark-worker:
    image: bitnami/spark:3.2.1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_CORES=4
    depends_on:
      - spark-master
    volumes:
      - spark-data:/spark-data
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077

  airflow:
    build: ./airflow
    depends_on:
      - postgres
      - minio
      - neo4j
      - spark-master
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - _AIRFLOW_WWW_USER_CREATE=True
      - _AIRFLOW_WWW_USER_USERNAME=airflow
      - _AIRFLOW_WWW_USER_PASSWORD=airflow
    ports:
      - "8080:8080"
    volumes:
      - airflow-dags:/opt/airflow/dagsairflow-dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs

  neo4j:
    image: neo4j:5.3.0
    # command: bash -c 'sleep 20'
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j-data:/data    

  fastapi:
    build: ./fastapi
    environment:
      - APP_MODULE=app:app
    depends_on:
      - neo4j
      - airflow
    ports:
      - "8000:80"
    command: bash -c "sleep 30 && uvicorn app:app --host=0.0.0.0 --port=80"  
    volumes:
      - ./fastapi:/app


volumes:
  postgres-data:
  neo4j-data:
  airflow-dags:
  spark-data:
  data:

networks:
  network:
    driver: bridge